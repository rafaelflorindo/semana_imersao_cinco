{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\giova\\\\Desktop\\\\node_js\\\\semana_imersao_cinco\\\\site\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMeta = async e => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch(`http://localhost:8080/metas`, {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        console.log(responseEnv.message);\n      } else {\n        console.log(responseEnv.message);\n      }\n    } catch (err) {\n      console.log(\"erro: Meta não cadastrada com sucesso, tente mais tarde!!!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minha meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Status da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["C:/Users/giova/Desktop/node_js/semana_imersao_cinco/site/pages/cadastrar.js"],"names":["React","useState","Cadastrar","meta","setMeta","name","description","status","onChangeInput","e","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","console","log","message","err"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,SAAT,GAAoB;AAChB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC;AAC7BI,IAAAA,IAAI,EAAE,EADuB;AAE7BC,IAAAA,WAAW,EAAC,EAFiB;AAG7BC,IAAAA,MAAM,EAAE;AAHqB,GAAD,CAAhC;;AAMA,QAAMC,aAAa,GAAGC,CAAC,IAAIL,OAAO,iCAAKD,IAAL;AAAW,KAACM,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAArC,KAAlC;;AAEA,QAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAFiD;AAGvDiB,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAH8C,OAAhC,CAAvB;AAMA,YAAMC,WAAW,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAA1B;;AACA,UAAID,WAAW,CAACE,KAAhB,EAAsB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACK,OAAxB;AACH,OAFD,MAEK;AACDF,QAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACK,OAAxB;AACH;AACH,KAbF,CAaE,OAAMC,GAAN,EAAU;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACH;AACJ,GAlBD;;AAoBA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEb,QAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,MAFP;AAGI,QAAA,WAAW,EAAC,cAHhB;AAII,QAAA,QAAQ,EAAEJ;AAJd;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eASU;AAAA;AAAA;AAAA;AAAA,cATV,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,EAAE,EAAC,aAFP;AAGI,QAAA,WAAW,EAAC,yBAHhB;AAII,QAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,cAXJ,eAiBI;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAiBU;AAAA;AAAA;AAAA;AAAA,cAjBV,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAoBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,EAAE,EAAC,QAFP;AAGI,QAAA,WAAW,EAAC,gBAHhB;AAII,QAAA,QAAQ,EAAEA;AAJd;AAAA;AAAA;AAAA;AAAA,cApBJ,eA0BI;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA0BU;AAAA;AAAA;AAAA;AAAA,cA1BV,eA2BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmCH;;AACD,eAAeN,SAAf","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction Cadastrar(){\r\n    const [meta, setMeta] = useState({\r\n        name: '',\r\n        description:'',\r\n        status: ''\r\n    });\r\n\r\n    const onChangeInput = e => setMeta({...meta, [e.target.name]: e.target.value});\r\n    \r\n    const sendMeta = async e => {\r\n        e.preventDefault();\r\n        try{\r\n            const res = await fetch(`http://localhost:8080/metas`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(meta),\r\n            headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            const responseEnv = await res.json();\r\n            if (responseEnv.error){\r\n                console.log(responseEnv.message);\r\n            }else{\r\n                console.log(responseEnv.message);\r\n            }\r\n         }catch(err){\r\n            console.log(\"erro: Meta não cadastrada com sucesso, tente mais tarde!!!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <h1>Cadastrar minha meta</h1>\r\n        <hr />\r\n        <form onSubmit={sendMeta}>\r\n            <label>Nome</label>\r\n            <input type=\"text\" \r\n                name=\"name\" \r\n                id=\"name\" \r\n                placeholder=\"Nome da meta\"\r\n                onChange={onChangeInput}\r\n            \r\n            />\r\n            <br /><br />\r\n            <label>Descrição</label>\r\n            <input type=\"text\" \r\n                name=\"description\" \r\n                id=\"description\" \r\n                placeholder=\"Descrição da meta\"\r\n                onChange={onChangeInput}\r\n            />\r\n            <br /><br />\r\n\r\n            <label>Status</label>\r\n            <input type=\"text\" \r\n                name=\"status\" \r\n                id=\"status\" \r\n                placeholder=\"Status da meta\"\r\n                onChange={onChangeInput}\r\n            />\r\n            <br /><br />\r\n            <button type=\"submit\">Cadastrar</button>\r\n        </form>\r\n    </div>\r\n    );\r\n}\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}